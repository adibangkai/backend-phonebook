{"version":3,"sources":["components/Persons.js","components/Filter.js","components/PersonForm.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Persons","persons","onDelete","setPersons","map","person","className","name","number","onClick","id","Filter","value","handle","type","onChange","placeholder","PersonForm","submit","onNameChange","onNumberChange","onSubmit","baseUrl","axios","get","then","response","data","newObject","post","delete","put","Notification","message","isError","classes","App","useState","newName","setNewName","newNumber","setNewNumber","filterName","setFilterName","notifMessage","setNotifMessage","errorMessage","setErrorMessage","useEffect","contactServices","initialContact","personsToShow","filter","search","event","preventDefault","duplicateName","console","log","length","personToUpdate","window","confirm","find","p","changedPersons","returnedPerson","catch","err","concat","error","alert","setTimeout","target","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4bb35cd4.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Persons = ({ persons, setPersons, onDelete }) => {\n  return (\n    <>\n      {persons.map(person => (\n        <div className=\"card\" key={person.id}>\n          <div>\n            <ul>\n              <li>\n                <i className=\"fas fa-user\" /> <strong>{person.name}</strong>\n              </li>\n              <li>\n                <i className=\"fas fa-phone\" /> {person.number}\n              </li>\n            </ul>\n          </div>\n          <button className=\" btn-delete\" onClick={() => onDelete(person)}>\n            delete\n          </button>\n        </div>\n      ))}\n    </>\n  )\n}\n\nexport default Persons\n","import React from \"react\"\n\nconst Filter = ({ value, handle }) => {\n  return <input type=\"text\" value={value} onChange={handle} placeholder=\"Search Contact\" />\n}\n\nexport default Filter\n","import React from \"react\"\n\nconst PersonForm = ({ submit, name, number, onNameChange, onNumberChange }) => {\n  return (\n    <div className=\"formboard\">\n      <h2>Address Form</h2>\n      <form onSubmit={submit}>\n        <input type=\"text\" value={name} onChange={onNameChange} placeholder=\"Name\" />\n        <input type=\"number\" value={number} onChange={onNumberChange} placeholder=\"Number\" />\n        <button type=\"submit\" className=\"btn btn-primary btn-block\">\n          add\n        </button>\n      </form>\n    </div>\n  )\n}\nexport default PersonForm\n","import axios from \"axios\"\nconst baseUrl = \"/api/persons\"\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst deletePersons = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, deletePersons, update }\n","import React from \"react\"\n\nconst Notification = ({ message, isError = false }) => {\n  const classes = isError ? \"error\" : \"success\"\n  return <div className={classes}>{message}</div>\n}\n\nexport default Notification\n","import React, { useState, useEffect } from \"react\"\nimport Persons from \"./components/Persons\"\nimport Filter from \"./components/Filter\"\nimport PersonForm from \"./components/PersonForm\"\nimport contactServices from \"./services/persons\"\nimport Notification from \"./components/Notification\"\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState(\"\")\n  const [newNumber, setNewNumber] = useState(\"\")\n  const [filterName, setFilterName] = useState(\"\")\n  const [notifMessage, setNotifMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    contactServices.getAll().then(initialContact => {\n      setPersons(initialContact)\n    })\n  }, [])\n\n  const addPerson = event => {\n    event.preventDefault()\n    const duplicateName = persons.filter(person => person.name === newName)\n    console.log(duplicateName)\n    if (duplicateName.length) {\n      const personToUpdate = duplicateName[0]\n      const answer = window.confirm(`${newName} already on phonebook, you want to change the number?`)\n      if (answer) {\n        const { id, number } = personToUpdate\n        const person = persons.find(p => p.id === id)\n        const changedPersons = { ...person, number: newNumber }\n        contactServices\n          .update(id, changedPersons)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => (person.id !== id ? person : returnedPerson)))\n          })\n          .catch(err => {\n            setPersons(\n              persons.filter(person => {\n                return person.id !== personToUpdate.id\n              })\n            )\n            setErrorMessage(`Information of ${personToUpdate.name}  has already been removed from the server`)\n          })\n      }\n    } else {\n      if (!newName.length) {\n        alert(\"please fill the empty name\")\n      } else if (!newNumber.length) {\n        alert(\"please input the number\")\n      } else {\n        const personObject = {\n          name: newName,\n          number: newNumber\n        }\n        contactServices\n          .create(personObject)\n          .then(returnedPerson => {\n            setPersons(persons.concat(returnedPerson))\n            setNotifMessage(`Added ${newName}`)\n          })\n          .catch(err => {\n            setErrorMessage(err.response.data.error)\n          })\n      }\n      setTimeout(() => {\n        setNotifMessage(null)\n        setErrorMessage(null)\n      }, 3000)\n      setNewName(\"\")\n      setNewNumber(\"\")\n    }\n  }\n  const onDelete = personToDelete => {\n    const { id, name } = personToDelete\n\n    if (window.confirm(`Delete ${name}?`)) {\n      contactServices\n        .deletePersons(id)\n        .then(data => {\n          setPersons(persons.filter(person => person.id !== personToDelete.id))\n          setErrorMessage(`${name} is deleted from phonebook`)\n        })\n        .catch(error => {\n          setErrorMessage(error.response.data.error)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 3000)\n        })\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 3000)\n    }\n  }\n\n  const deleteContact = personToDelete => {\n    const { id, name } = personToDelete\n\n    const answer = window.confirm(`Delete ${name}?`)\n    if (answer) {\n      contactServices.deletePersons(id).then(data => {\n        setPersons(persons.filter(person => person.id !== id))\n      })\n    }\n  }\n\n  const handleNameChange = event => {\n    setNewName(event.target.value)\n  }\n  const handleSearch = event => {\n    setFilterName(event.target.value)\n  }\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value)\n  }\n  const personsToShow = filterName ? persons.filter(person => person.name.search(filterName) !== -1) : persons\n\n  return (\n    <>\n      <div className=\"navbar\">\n        <h1>Phonebook</h1>\n      </div>\n\n      <div className=\"main\">\n        {errorMessage ? <Notification message={errorMessage} isError={true} /> : null}\n        {notifMessage ? <Notification message={notifMessage} /> : null}\n        <div className=\"grid-2\">\n          <PersonForm submit={addPerson} name={newName} number={newNumber} onNameChange={handleNameChange} onNumberChange={handleNumberChange} />\n          <div>\n            <h2>&#8203;</h2>\n            <Filter value={filterName} handle={handleSearch} />\n            <Persons persons={personsToShow} setPersons={setPersons} onDelete={onDelete} />\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport \"./index.css\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}