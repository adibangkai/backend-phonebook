{"version":3,"sources":["services/persons.js","components/Persons.js","components/Filter.js","components/PersonForm.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Persons","persons","setPersons","map","person","className","name","number","onClick","personToDelete","window","confirm","contactServices","filter","deleteContact","Filter","value","handle","type","onChange","placeholder","PersonForm","submit","onNameChange","onNumberChange","onSubmit","Notification","message","isError","classes","App","useState","newName","setNewName","newNumber","setNewNumber","filterName","setFilterName","notifMessage","setNotifMessage","errorMessage","setErrorMessage","useEffect","initialContact","personsToShow","search","event","preventDefault","duplicateName","console","log","length","personToUpdate","find","p","changedPersons","returnedPerson","catch","err","concat","error","alert","setTimeout","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.288a9f6a.chunk.js","sourcesContent":["import axios from \"axios\"\nconst baseUrl = \"http://localhost:3001/api/persons\"\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst deletePersons = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, deletePersons, update }\n","import React from \"react\"\nimport contactServices from \"../services/persons\"\n\nconst Persons = ({ persons, setPersons }) => {\n  const deleteContact = personToDelete => {\n    const { id, name } = personToDelete\n\n    const answer = window.confirm(`Delete ${name}?`)\n    if (answer) {\n      contactServices.deletePersons(id).then(data => {\n        setPersons(persons.filter(person => person.id !== id))\n      })\n    }\n  }\n  return (\n    <>\n      {persons.map(person => (\n        <div className=\"card\" key={person.id}>\n          <div>\n            <ul>\n              <li>\n                <i className=\"fas fa-user\" /> <strong>{person.name}</strong>\n              </li>\n              <li>\n                <i className=\"fas fa-phone\" /> {person.number}\n              </li>\n            </ul>\n          </div>\n          <button className=\" btn-delete\" onClick={() => deleteContact(person)}>\n            delete\n          </button>\n        </div>\n      ))}\n    </>\n  )\n}\n\nexport default Persons\n","import React from \"react\"\n\nconst Filter = ({ value, handle }) => {\n  return <input type=\"text\" value={value} onChange={handle} placeholder=\"Search Contact\" />\n}\n\nexport default Filter\n","import React from \"react\"\n\nconst PersonForm = ({ submit, name, number, onNameChange, onNumberChange }) => {\n  return (\n    <div className=\"formboard\">\n      <h2>Address Form</h2>\n      <form onSubmit={submit}>\n        <input type=\"text\" value={name} onChange={onNameChange} placeholder=\"Name\" />\n        <input type=\"number\" value={number} onChange={onNumberChange} placeholder=\"Number\" />\n        <button type=\"submit\" className=\"btn btn-primary btn-block\">\n          add\n        </button>\n      </form>\n    </div>\n  )\n}\nexport default PersonForm\n","import React from \"react\"\n\nconst Notification = ({ message, isError = false }) => {\n  const classes = isError ? \"error\" : \"success\"\n  return <div className={classes}>{message}</div>\n}\n\nexport default Notification\n","import React, { useState, useEffect } from \"react\"\nimport Persons from \"./components/Persons\"\nimport Filter from \"./components/Filter\"\nimport PersonForm from \"./components/PersonForm\"\nimport contactServices from \"./services/persons\"\nimport Notification from \"./components/Notification\"\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState(\"\")\n  const [newNumber, setNewNumber] = useState(\"\")\n  const [filterName, setFilterName] = useState(\"\")\n  const [notifMessage, setNotifMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    contactServices.getAll().then(initialContact => {\n      setPersons(initialContact)\n    })\n  }, [])\n\n  const addPerson = event => {\n    event.preventDefault()\n    const duplicateName = persons.filter(person => person.name === newName)\n    console.log(duplicateName)\n    if (duplicateName.length) {\n      const personToUpdate = duplicateName[0]\n      const answer = window.confirm(`${newName} already on phonebook, you want to change the number?`)\n      if (answer) {\n        const { id, number } = personToUpdate\n        const person = persons.find(p => p.id === id)\n        const changedPersons = { ...person, number: newNumber }\n        contactServices\n          .update(id, changedPersons)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => (person.id !== id ? person : returnedPerson)))\n          })\n          .catch(err => {\n            setPersons(\n              persons.filter(person => {\n                return person.id !== personToUpdate.id\n              })\n            )\n            setErrorMessage(`Information of ${personToUpdate.name}  has already been removed from the server`)\n          })\n      }\n    } else {\n      if (!newName.length) {\n        alert(\"please fill the empty name\")\n      } else if (!newNumber.length) {\n        alert(\"please input the number\")\n      } else {\n        const personObject = {\n          name: newName,\n          number: newNumber\n        }\n        contactServices\n          .create(personObject)\n          .then(returnedPerson => {\n            setPersons(persons.concat(returnedPerson))\n            setNotifMessage(`Added ${newName}`)\n          })\n          .catch(err => {\n            setErrorMessage(err.response.data.error)\n          })\n      }\n      setTimeout(() => {\n        setNotifMessage(null)\n        setErrorMessage(null)\n      }, 5000)\n      setNewName(\"\")\n      setNewNumber(\"\")\n    }\n  }\n\n  const handleNameChange = event => {\n    setNewName(event.target.value)\n  }\n  const handleSearch = event => {\n    setFilterName(event.target.value)\n  }\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value)\n  }\n  const personsToShow = filterName ? persons.filter(person => person.name.search(filterName) !== -1) : persons\n\n  return (\n    <>\n      <div className=\"navbar\">\n        <h1>Phonebook</h1>\n      </div>\n\n      <div className=\"main\">\n        {errorMessage ? <Notification message={errorMessage} isError={true} /> : null}\n        {notifMessage ? <Notification message={notifMessage} /> : null}\n        <div className=\"grid-2\">\n          <PersonForm submit={addPerson} name={newName} number={newNumber} onNameChange={handleNameChange} onNumberChange={handleNumberChange} />\n          <div>\n            <h2>&#8203;</h2>\n            <Filter value={filterName} handle={handleSearch} />\n            <Persons persons={personsToShow} setPersons={setPersons} />\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport \"./index.css\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}